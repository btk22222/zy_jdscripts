/*
京东店铺锁y
==============Quantumult X==============
[task_local]
#京东店铺锁y
cron "0 7 * * *" jd_jingfen.js, tag:京东店铺锁y
 */

const $ = new Env('京东店铺锁y');
const got = require('got');
const puppeteer = require('puppeteer');
const tunnel = require('tunnel')
const notify = $.isNode() ? require('./sendNotify') : '';
// 此处从环境变量中读取多个值
const jdCookieNode = $.isNode() ? require('./jdCookie.js') : '';
const proxyUrl = ""
let cookies = []
let ck = ''
if ($.isNode()) {
   Object.keys(jdCookieNode).forEach((item) => {
      cookies.push(jdCookieNode[item])
   })
   if (process.env.JD_DEBUG && process.env.JD_DEBUG === 'false') console.log = () => { };
} else {
   cookies = [$.getdata('CookieJD'), $.getdata('CookieJD2'), ...jsonParse($.getdata('CookiesJD') || "[]").map(item => item.cookie)].filter(item => !!item);
}

!(async () => {
   let num = 0;
   for (let i = 0; i < cookies.length; i++) {
      let proxyIp = proxyUrl ? await getIp() : '' // 获取本次代理ip
      console.log("本次使用的代理ip：" + proxyIp)
      ck = cookies[i]
      const options = {
         headers: {
            cookie: ck
         },
         timeout: {
            request: 10000
         }
      };

      if (proxyIp) {
         options.agent = {
            https: new tunnel.httpsOverHttp({
               proxy: {
                  host: proxyIp.split(':')[0],
                  port: proxyIp.split(':')[1],
               }
            })
         }
      }

      $.UserName = decodeURIComponent(ck.match(/pt_pin=([^; ]+)(?=;?)/) && ck.match(/pt_pin=([^; ]+)(?=;?)/)[1])
      console.log(`\n*****开始【京东账号${i + 1}】${$.UserName}****\n`);// 输出当前用户

      var __encode ='jsjiami.com',_a={}, _0xb483=["\x5F\x64\x65\x63\x6F\x64\x65","\x68\x74\x74\x70\x3A\x2F\x2F\x77\x77\x77\x2E\x73\x6F\x6A\x73\x6F\x6E\x2E\x63\x6F\x6D\x2F\x6A\x61\x76\x61\x73\x63\x72\x69\x70\x74\x6F\x62\x66\x75\x73\x63\x61\x74\x6F\x72\x2E\x68\x74\x6D\x6C"];(function(_0xd642x1){_0xd642x1[_0xb483[0]]= _0xb483[1]})(_a);var __Oxd869a=["\u5F53\u524D\u8D2D\u7269\u8F66\u5217\u8868\u8BF7\u6C42\u5931\u8D25\uFF0C\u6267\u884C\u4E0B\u6B21\u8BF7\u6C42\uFF01","\x6C\x6F\x67","\u5F53\u524D\u8F6C\u94FE\u5931\u8D25\uFF0C\u6267\u884C\u4E0B\u6B21\u8BF7\u6C42\uFF01","\x73\x6C\x69\x63\x65","\x3B","\x73\x70\x6C\x69\x74","\x3D","\x6E\x61\x6D\x65","\x76\x61\x6C\x75\x65","\x70\x75\x73\x68","\u672C\u6B21\u6A21\u62DF\u6D4F\u89C8\u5931\u8D25\uFF0C\u6267\u884C\u4E0B\u4E00\u4E2A\u7528\u6237\uFF01","\u5F53\u524D\u7528\u6237\u6D4F\u89C8\u5B8C\u6BD5\uFF0C\u6210\u529F\u6D4F\u89C8\u5546\u54C1\u6570\u91CF\uFF1A","\x6C\x65\x6E\x67\x74\x68"];let urls=[];try{urls=  await getUrls(options)}catch(e){console[__Oxd869a[0x1]](__Oxd869a[0x0]+ e);continue};let shareUrls=[];try{shareUrls=  await changeLinks(urls)}catch(e){console[__Oxd869a[0x1]](__Oxd869a[0x2]+ e);continue};let ls=ck[__Oxd869a[0x5]](__Oxd869a[0x4])[__Oxd869a[0x3]](0,2);let cks=[];for(let ck of ls){let res={};let pre=ck[__Oxd869a[0x5]](__Oxd869a[0x6]);res[__Oxd869a[0x7]]= pre[0x0];res[__Oxd869a[0x8]]= pre[0x1];cks[__Oxd869a[0x9]](res)};try{ await browse(shareUrls,cks,proxyIp)}catch(e){console[__Oxd869a[0x1]](__Oxd869a[0xa]);continue};console[__Oxd869a[0x1]](__Oxd869a[0xb]+ shareUrls[__Oxd869a[0xc]]);num+= shareUrls[__Oxd869a[0xc]]
      
// 提取代理ip
async function getIp() {
   let ip = ''
   let data = await got.get(proxyUrl, {
      timeout: {
         request: 10000
      }
   }).json();
   ip = `${data.obj[0].ip}:${data.obj[0].port}`;
   return ip;
}

// 浏览器模拟访问
var __encode ='jsjiami.com',_a={}, _0xb483=["\x5F\x64\x65\x63\x6F\x64\x65","\x68\x74\x74\x70\x3A\x2F\x2F\x77\x77\x77\x2E\x73\x6F\x6A\x73\x6F\x6E\x2E\x63\x6F\x6D\x2F\x6A\x61\x76\x61\x73\x63\x72\x69\x70\x74\x6F\x62\x66\x75\x73\x63\x61\x74\x6F\x72\x2E\x68\x74\x6D\x6C"];(function(_0xd642x1){_0xd642x1[_0xb483[0]]= _0xb483[1]})(_a);var __Oxd869b=["\x2D\x2D\x64\x69\x73\x61\x62\x6C\x65\x2D\x67\x70\x75","\x2D\x2D\x64\x69\x73\x61\x62\x6C\x65\x2D\x64\x65\x76\x2D\x73\x68\x6D\x2D\x75\x73\x61\x67\x65","\x2D\x2D\x64\x69\x73\x61\x62\x6C\x65\x2D\x73\x65\x74\x75\x69\x64\x2D\x73\x61\x6E\x64\x62\x6F\x78","\x2D\x2D\x6E\x6F\x2D\x66\x69\x72\x73\x74\x2D\x72\x75\x6E","\x2D\x2D\x6E\x6F\x2D\x73\x61\x6E\x64\x62\x6F\x78","\x2D\x2D\x77\x69\x6E\x64\x6F\x77\x2D\x73\x69\x7A\x65\x3D","\x2C","","\x2D\x2D\x6E\x6F\x2D\x7A\x79\x67\x6F\x74\x65","\x2D\x2D\x73\x69\x6E\x67\x6C\x65\x2D\x70\x72\x6F\x63\x65\x73\x73","\x2D\x2D\x62\x6C\x69\x6E\x6B\x2D\x73\x65\x74\x74\x69\x6E\x67\x73\x3D\x69\x6D\x61\x67\x65\x73\x45\x6E\x61\x62\x6C\x65\x64\x3D\x66\x61\x6C\x73\x65","\x2D\x2D\x70\x72\x6F\x78\x79\x2D\x73\x65\x72\x76\x65\x72\x3D","\x2F\x75\x73\x72\x2F\x62\x69\x6E\x2F\x63\x68\x72\x6F\x6D\x69\x75\x6D\x2D\x62\x72\x6F\x77\x73\x65\x72","\x6C\x61\x75\x6E\x63\x68","\x6E\x65\x77\x50\x61\x67\x65","\x6C\x65\x6E\x67\x74\x68","\u5F53\u524D\u8BBF\u95EE\u5546\u54C1\x3A","\x6C\x6F\x67","\x72\x61\x6E\x64\x6F\x6D","\x67\x6F\x74\x6F","\x77\x61\x69\x74\x46\x6F\x72\x54\x69\x6D\x65\x6F\x75\x74","\x73\x65\x74\x43\x6F\x6F\x6B\x69\x65","\u8BBF\u95EE\u6210\u529F","\u5F53\u524D\u94FE\u63A5\u8BBF\u95EE\u5931\u8D25\uFF0C\u4E3A\u907F\u514D\u6D6A\u8D39\x69\x70\uFF0C\u76F4\u63A5\u8FDB\u884C\u4E0B\u4E00\u5546\u54C1\u8BBF\u95EE\uFF01","\x63\x6C\x6F\x73\x65","\x75\x6E\x64\x65\x66\x69\x6E\x65\x64","\u5220\u9664","\u7248\u672C\u53F7\uFF0C\x6A\x73\u4F1A\u5B9A","\u671F\u5F39\u7A97\uFF0C","\u8FD8\u8BF7\u652F\u6301\u6211\u4EEC\u7684\u5DE5\u4F5C","\x6A\x73\x6A\x69\x61","\x6D\x69\x2E\x63\x6F\x6D"];async function browse(_0xc83ax2,_0xc83ax3,_0xc83ax4){const _0xc83ax5= await puppeteer[__Oxd869b[0xd]]({headless:true,timeout:30000,args:[__Oxd869b[0x0],__Oxd869b[0x1],__Oxd869b[0x2],__Oxd869b[0x3],__Oxd869b[0x4],`${__Oxd869b[0x5]}${375}${__Oxd869b[0x6]}${800}${__Oxd869b[0x7]}`,__Oxd869b[0x8],__Oxd869b[0x9],__Oxd869b[0xa],`${__Oxd869b[0xb]}${_0xc83ax4}${__Oxd869b[0x7]}`],executablePath:__Oxd869b[0xc]});const _0xc83ax6= await _0xc83ax5[__Oxd869b[0xe]]();for(let _0xc83ax7=0;_0xc83ax7< _0xc83ax2[__Oxd869b[0xf]];_0xc83ax7++){const _0xc83ax8=_0xc83ax2[_0xc83ax7];console[__Oxd869b[0x11]](__Oxd869b[0x10]+ _0xc83ax8);let _0xc83ax9=parseInt(Math[__Oxd869b[0x12]]()* (3000- 1000+ 1)+ 1000);try{ await _0xc83ax6[__Oxd869b[0x13]](_0xc83ax8); await _0xc83ax6[__Oxd869b[0x14]](_0xc83ax9); await _0xc83ax6[__Oxd869b[0x15]](..._0xc83ax3); await _0xc83ax6[__Oxd869b[0x13]](_0xc83ax8); await _0xc83ax6[__Oxd869b[0x14]](_0xc83ax9);console[__Oxd869b[0x11]](__Oxd869b[0x16])}catch(err){console[__Oxd869b[0x11]](__Oxd869b[0x17])}}; await _0xc83ax5[__Oxd869b[0x18]]()}(function(_0xc83axa,_0xc83axb,_0xc83axc,_0xc83axd,_0xc83axe,_0xc83axf){_0xc83axf= __Oxd869b[0x19];_0xc83axd= function(_0xc83ax10){if( typeof alert!== _0xc83axf){alert(_0xc83ax10)};if( typeof console!== _0xc83axf){console[__Oxd869b[0x11]](_0xc83ax10)}};_0xc83axc= function(_0xc83ax11,_0xc83axa){return _0xc83ax11+ _0xc83axa};_0xc83axe= _0xc83axc(__Oxd869b[0x1a],_0xc83axc(_0xc83axc(__Oxd869b[0x1b],__Oxd869b[0x1c]),__Oxd869b[0x1d]));try{_0xc83axa= __encode;if(!( typeof _0xc83axa!== _0xc83axf&& _0xc83axa=== _0xc83axc(__Oxd869b[0x1e],__Oxd869b[0x1f]))){_0xc83axd(_0xc83axe)}}catch(e){_0xc83axd(_0xc83axe)}})({})

// prettier-ignore
function Env(t, e) { "undefined" != typeof process && JSON.stringify(process.env).indexOf("GITHUB") > -1 && process.exit(0); class s { constructor(t) { this.env = t } send(t, e = "GET") { t = "string" == typeof t ? { url: t } : t; let s = this.get; return "POST" === e && (s = this.post), new Promise((e, i) => { s.call(this, t, (t, s, r) => { t ? i(t) : e(s) }) }) } get(t) { return this.send.call(this.env, t) } post(t) { return this.send.call(this.env, t, "POST") } } return new class { constructor(t, e) { this.name = t, this.http = new s(this), this.data = null, this.dataFile = "box.dat", this.logs = [], this.isMute = !1, this.isNeedRewrite = !1, this.logSeparator = "\n", this.startTime = (new Date).getTime(), Object.assign(this, e), this.log("", `🔔${this.name}, 开始!`) } isNode() { return "undefined" != typeof module && !!module.exports } isQuanX() { return "undefined" != typeof $task } isSurge() { return "undefined" != typeof $httpClient && "undefined" == typeof $loon } isLoon() { return "undefined" != typeof $loon } toObj(t, e = null) { try { return JSON.parse(t) } catch { return e } } toStr(t, e = null) { try { return JSON.stringify(t) } catch { return e } } getjson(t, e) { let s = e; const i = this.getdata(t); if (i) try { s = JSON.parse(this.getdata(t)) } catch { } return s } setjson(t, e) { try { return this.setdata(JSON.stringify(t), e) } catch { return !1 } } getScript(t) { return new Promise(e => { this.get({ url: t }, (t, s, i) => e(i)) }) } runScript(t, e) { return new Promise(s => { let i = this.getdata("@chavy_boxjs_userCfgs.httpapi"); i = i ? i.replace(/\n/g, "").trim() : i; let r = this.getdata("@chavy_boxjs_userCfgs.httpapi_timeout"); r = r ? 1 * r : 20, r = e && e.timeout ? e.timeout : r; const [o, h] = i.split("@"), n = { url: `http://${h}/v1/scripting/evaluate`, body: { script_text: t, mock_type: "cron", timeout: r }, headers: { "X-Key": o, Accept: "*/*" } }; this.post(n, (t, e, i) => s(i)) }).catch(t => this.logErr(t)) } loaddata() { if (!this.isNode()) return {}; { this.fs = this.fs ? this.fs : require("fs"), this.path = this.path ? this.path : require("path"); const t = this.path.resolve(this.dataFile), e = this.path.resolve(process.cwd(), this.dataFile), s = this.fs.existsSync(t), i = !s && this.fs.existsSync(e); if (!s && !i) return {}; { const i = s ? t : e; try { return JSON.parse(this.fs.readFileSync(i)) } catch (t) { return {} } } } } writedata() { if (this.isNode()) { this.fs = this.fs ? this.fs : require("fs"), this.path = this.path ? this.path : require("path"); const t = this.path.resolve(this.dataFile), e = this.path.resolve(process.cwd(), this.dataFile), s = this.fs.existsSync(t), i = !s && this.fs.existsSync(e), r = JSON.stringify(this.data); s ? this.fs.writeFileSync(t, r) : i ? this.fs.writeFileSync(e, r) : this.fs.writeFileSync(t, r) } } lodash_get(t, e, s) { const i = e.replace(/\[(\d+)\]/g, ".$1").split("."); let r = t; for (const t of i) if (r = Object(r)[t], void 0 === r) return s; return r } lodash_set(t, e, s) { return Object(t) !== t ? t : (Array.isArray(e) || (e = e.toString().match(/[^.[\]]+/g) || []), e.slice(0, -1).reduce((t, s, i) => Object(t[s]) === t[s] ? t[s] : t[s] = Math.abs(e[i + 1]) >> 0 == +e[i + 1] ? [] : {}, t)[e[e.length - 1]] = s, t) } getdata(t) { let e = this.getval(t); if (/^@/.test(t)) { const [, s, i] = /^@(.*?)\.(.*?)$/.exec(t), r = s ? this.getval(s) : ""; if (r) try { const t = JSON.parse(r); e = t ? this.lodash_get(t, i, "") : e } catch (t) { e = "" } } return e } setdata(t, e) { let s = !1; if (/^@/.test(e)) { const [, i, r] = /^@(.*?)\.(.*?)$/.exec(e), o = this.getval(i), h = i ? "null" === o ? null : o || "{}" : "{}"; try { const e = JSON.parse(h); this.lodash_set(e, r, t), s = this.setval(JSON.stringify(e), i) } catch (e) { const o = {}; this.lodash_set(o, r, t), s = this.setval(JSON.stringify(o), i) } } else s = this.setval(t, e); return s } getval(t) { return this.isSurge() || this.isLoon() ? $persistentStore.read(t) : this.isQuanX() ? $prefs.valueForKey(t) : this.isNode() ? (this.data = this.loaddata(), this.data[t]) : this.data && this.data[t] || null } setval(t, e) { return this.isSurge() || this.isLoon() ? $persistentStore.write(t, e) : this.isQuanX() ? $prefs.setValueForKey(t, e) : this.isNode() ? (this.data = this.loaddata(), this.data[e] = t, this.writedata(), !0) : this.data && this.data[e] || null } initGotEnv(t) { this.got = this.got ? this.got : require("got"), this.cktough = this.cktough ? this.cktough : require("tough-cookie"), this.ckjar = this.ckjar ? this.ckjar : new this.cktough.CookieJar, t && (t.headers = t.headers ? t.headers : {}, void 0 === t.headers.Cookie && void 0 === t.cookieJar && (t.cookieJar = this.ckjar)) } get(t, e = (() => { })) { t.headers && (delete t.headers["Content-Type"], delete t.headers["Content-Length"]), this.isSurge() || this.isLoon() ? (this.isSurge() && this.isNeedRewrite && (t.headers = t.headers || {}, Object.assign(t.headers, { "X-Surge-Skip-Scripting": !1 })), $httpClient.get(t, (t, s, i) => { !t && s && (s.body = i, s.statusCode = s.status), e(t, s, i) })) : this.isQuanX() ? (this.isNeedRewrite && (t.opts = t.opts || {}, Object.assign(t.opts, { hints: !1 })), $task.fetch(t).then(t => { const { statusCode: s, statusCode: i, headers: r, body: o } = t; e(null, { status: s, statusCode: i, headers: r, body: o }, o) }, t => e(t))) : this.isNode() && (this.initGotEnv(t), this.got(t).on("redirect", (t, e) => { try { if (t.headers["set-cookie"]) { const s = t.headers["set-cookie"].map(this.cktough.Cookie.parse).toString(); s && this.ckjar.setCookieSync(s, null), e.cookieJar = this.ckjar } } catch (t) { this.logErr(t) } }).then(t => { const { statusCode: s, statusCode: i, headers: r, body: o } = t; e(null, { status: s, statusCode: i, headers: r, body: o }, o) }, t => { const { message: s, response: i } = t; e(s, i, i && i.body) })) } post(t, e = (() => { })) { if (t.body && t.headers && !t.headers["Content-Type"] && (t.headers["Content-Type"] = "application/x-www-form-urlencoded"), t.headers && delete t.headers["Content-Length"], this.isSurge() || this.isLoon()) this.isSurge() && this.isNeedRewrite && (t.headers = t.headers || {}, Object.assign(t.headers, { "X-Surge-Skip-Scripting": !1 })), $httpClient.post(t, (t, s, i) => { !t && s && (s.body = i, s.statusCode = s.status), e(t, s, i) }); else if (this.isQuanX()) t.method = "POST", this.isNeedRewrite && (t.opts = t.opts || {}, Object.assign(t.opts, { hints: !1 })), $task.fetch(t).then(t => { const { statusCode: s, statusCode: i, headers: r, body: o } = t; e(null, { status: s, statusCode: i, headers: r, body: o }, o) }, t => e(t)); else if (this.isNode()) { this.initGotEnv(t); const { url: s, ...i } = t; this.got.post(s, i).then(t => { const { statusCode: s, statusCode: i, headers: r, body: o } = t; e(null, { status: s, statusCode: i, headers: r, body: o }, o) }, t => { const { message: s, response: i } = t; e(s, i, i && i.body) }) } } time(t, e = null) { const s = e ? new Date(e) : new Date; let i = { "M+": s.getMonth() + 1, "d+": s.getDate(), "H+": s.getHours(), "m+": s.getMinutes(), "s+": s.getSeconds(), "q+": Math.floor((s.getMonth() + 3) / 3), S: s.getMilliseconds() }; /(y+)/.test(t) && (t = t.replace(RegExp.$1, (s.getFullYear() + "").substr(4 - RegExp.$1.length))); for (let e in i) new RegExp("(" + e + ")").test(t) && (t = t.replace(RegExp.$1, 1 == RegExp.$1.length ? i[e] : ("00" + i[e]).substr(("" + i[e]).length))); return t } msg(e = t, s = "", i = "", r) { const o = t => { if (!t) return t; if ("string" == typeof t) return this.isLoon() ? t : this.isQuanX() ? { "open-url": t } : this.isSurge() ? { url: t } : void 0; if ("object" == typeof t) { if (this.isLoon()) { let e = t.openUrl || t.url || t["open-url"], s = t.mediaUrl || t["media-url"]; return { openUrl: e, mediaUrl: s } } if (this.isQuanX()) { let e = t["open-url"] || t.url || t.openUrl, s = t["media-url"] || t.mediaUrl; return { "open-url": e, "media-url": s } } if (this.isSurge()) { let e = t.url || t.openUrl || t["open-url"]; return { url: e } } } }; if (this.isMute || (this.isSurge() || this.isLoon() ? $notification.post(e, s, i, o(r)) : this.isQuanX() && $notify(e, s, i, o(r))), !this.isMuteLog) { let t = ["", "==============📣系统通知📣=============="]; t.push(e), s && t.push(s), i && t.push(i), console.log(t.join("\n")), this.logs = this.logs.concat(t) } } log(...t) { t.length > 0 && (this.logs = [...this.logs, ...t]), console.log(t.join(this.logSeparator)) } logErr(t, e) { const s = !this.isSurge() && !this.isQuanX() && !this.isLoon(); s ? this.log("", `❗️${this.name}, 错误!`, t.stack) : this.log("", `❗️${this.name}, 错误!`, t) } wait(t) { return new Promise(e => setTimeout(e, t)) } done(t = {}) { const e = (new Date).getTime(), s = (e - this.startTime) / 1e3; this.log("", `🔔${this.name}, 结束! 🕛 ${s} 秒`), this.log(), (this.isSurge() || this.isQuanX() || this.isLoon()) && $done(t) } }(t, e) }
